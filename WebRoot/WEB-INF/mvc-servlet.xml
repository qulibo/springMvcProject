<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation=
	"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
	 http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
	 http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
	 http://www.springframework.org/schema/aop  http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
	 http://www.springframework.org/schema/mvc  http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
	">
	<context:component-scan base-package="cn"></context:component-scan>
	
	<!--自定义验证器 手工注入国际化 -->
	<bean id="localValidatorFactoryBean" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="validationMessageSource" ref="messageSource"></property>
	</bean>
	
	<!-- 静态资源映射  将web-inf目录下的文件映射到webroot目录下
		注意：spring4.2： servlet3.0（Javaee6）支持
           spring4.0： servlet2.5（Javaee5）支持
	-->
    <mvc:resources mapping="/img/**" 
                           location="/WEB-INF/imgs/"/>
                           
	<!-- springmvc 配置拦截  / 所有资源都被拦截 图片无法展示  将除控制层以外的资源交回给servlet处理 -->
	<mvc:default-servlet-handler/>
	
  	<!-- 将springmvc注解的action交给springmvc处理 -->
  	<mvc:annotation-driven validator="localValidatorFactoryBean"></mvc:annotation-driven>
  	
  	
  	<!-- 启用文件上传 -->
  	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
      <!-- 限制上传文件大小 5M -->
  	  <property name="maxUploadSize" value="5242880"></property>
  	</bean>
  	
  	<!-- 该拦截器 用于 拦截url上参数   只是当 jsp经过action之后 才会将当前的国家和语言存储在session 同时从session中获取
  	-->
  	<mvc:interceptors>
  		<bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
  			<property name="paramName" value="locale"></property>
  		</bean>
  		<mvc:interceptor>
  	    	<!-- path=/**拦截所有action -->
  	    	<mvc:mapping path="/inter"/>
  	 		<bean class="cn.et.springmvc.lesson05.MyInteractor"></bean>
  	 	</mvc:interceptor>
  	 	<!-- 重复提交拦截器 --> 
  	 	<mvc:interceptor>
  	    	<mvc:mapping path="/tm"/>
  	 		<bean class="cn.et.springmvc.lesson05.TokenInteractor"></bean>
  	 	</mvc:interceptor>
  	</mvc:interceptors>
  	
  	<!-- 参数需要被临时存储在某个地方 当用户再次访问 使用之前设置的参数 -->
  	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
  	</bean>
  	
  	
  	
  	
  	
	<context:property-placeholder location="classpath:/jdbc.properties"/>
	<!-- 视图解析器配置   prefix为追加跳转前缀, suffix为追加跳转后缀
	  <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	  	<property name="prefix" value="/"></property>
	  	<property name="suffix" value=".jsp"></property>
	  </bean>
	-->
  	<bean id="dataSource"  class="org.springframework.jdbc.datasource.DriverManagerDataSource">
	    <property name="url" value="${url}" ></property>
	    <property name="username" value="${userid}" ></property>
	    <property name="password" value="${password2}" ></property>
	    <property name="driverClassName" value="${driverClass}" ></property>
  	</bean>
  	<!-- 事务管理器  不再使用jdbc的commit和rollback 必须由事务管理器提供 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
      <property name="dataSource" ref="dataSource"></property> 
    </bean>
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
   	   <property name="dataSource" ref="dataSource"></property> 
    </bean>
    <!-- 定义通知  通知的代码 spring已经实现  -->
    <tx:advice id="myAdvise"  transaction-manager="transactionManager">
	   	<tx:attributes>
	   		<tx:method name="update*" propagation="REQUIRED"/>
	   		<tx:method name="add*"/>
	   		<tx:method name="delete*"/>
	   		<tx:method name="*" read-only="true"/>
	   	</tx:attributes>
    </tx:advice>
   
    <aop:config>
	   	<aop:pointcut expression="execution(* cn.*..*.service.*.*(..))  " id="myPoint"/>
	    <aop:advisor advice-ref="myAdvise" pointcut-ref="myPoint"/>
    </aop:config>
</beans>